{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../FieldPath","data":{"isAsync":false}},{"name":"../../../utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseUpdateArgs = exports.mergeFieldPathData = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _FieldPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../FieldPath\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[4], \"../../../utils\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var buildFieldPathData = function buildFieldPathData(segments, value) {\n    if (segments.length === 1) {\n      return (0, _defineProperty2.default)({}, segments[0], value);\n    }\n\n    return (0, _defineProperty2.default)({}, segments[0], buildFieldPathData(segments.slice(1), value));\n  };\n\n  var mergeFieldPathData = function mergeFieldPathData(data, segments, value) {\n    if (segments.length === 1) {\n      return _objectSpread({}, data, (0, _defineProperty2.default)({}, segments[0], value));\n    }\n\n    if (data[segments[0]]) {\n      return _objectSpread({}, data, (0, _defineProperty2.default)({}, segments[0], mergeFieldPathData(data[segments[0]], segments.slice(1), value)));\n    }\n\n    return _objectSpread({}, data, (0, _defineProperty2.default)({}, segments[0], buildFieldPathData(segments.slice(1), value)));\n  };\n\n  exports.mergeFieldPathData = mergeFieldPathData;\n\n  var parseUpdateArgs = function parseUpdateArgs(args, methodName) {\n    var data = {};\n\n    if (args.length === 1) {\n      if (!(0, _utils.isObject)(args[0])) {\n        throw new Error(methodName + \" failed: If using a single update argument, it must be an object.\");\n      }\n\n      var _args = (0, _slicedToArray2.default)(args, 1);\n\n      data = _args[0];\n    } else if (args.length % 2 === 1) {\n      throw new Error(methodName + \" failed: The update arguments must be either a single object argument, or equal numbers of key/value pairs.\");\n    } else {\n      for (var i = 0; i < args.length; i += 2) {\n        var key = args[i];\n        var value = args[i + 1];\n\n        if ((0, _utils.isString)(key)) {\n          data[key] = value;\n        } else if (key instanceof _FieldPath.default) {\n          data = mergeFieldPathData(data, key._segments, value);\n        } else {\n          throw new Error(methodName + \" failed: Argument at index \" + i + \" must be a string or FieldPath\");\n        }\n      }\n    }\n\n    return data;\n  };\n\n  exports.parseUpdateArgs = parseUpdateArgs;\n});","map":[[13,0,1,0],[15,0,2,0],[21,0,4,0],[21,6,4,6,"buildFieldPathData"],[21,24,4,24],[21,27,4,27],[21,36,4,6,"buildFieldPathData"],[21,54,4,27],[21,55,4,28,"segments"],[21,63,4,27],[21,65,4,38,"value"],[21,70,4,27],[21,72,4,48],[22,0,5,2],[22,8,5,6,"segments"],[22,16,5,14],[22,17,5,15,"length"],[22,23,5,6],[22,28,5,26],[22,29,5,2],[22,31,5,29],[23,0,6,4],[23,47,7,7,"segments"],[23,55,7,15],[23,56,7,16],[23,57,7,15],[23,58,6,4],[23,60,7,21,"value"],[23,65,6,4],[24,0,9,3],[26,0,11,2],[26,45,12,5,"segments"],[26,53,12,13],[26,54,12,14],[26,55,12,13],[26,56,11,2],[26,58,12,19,"buildFieldPathData"],[26,76,12,37],[26,77,12,38,"segments"],[26,85,12,46],[26,86,12,47,"slice"],[26,91,12,38],[26,92,12,53],[26,93,12,38],[26,94,12,37],[26,96,12,57,"value"],[26,101,12,37],[26,102,11,2],[27,0,14,1],[27,3,4,0],[29,0,17,7],[29,6,17,13,"mergeFieldPathData"],[29,24,17,31],[29,27,17,34],[29,36,17,13,"mergeFieldPathData"],[29,54,17,34],[29,55,17,35,"data"],[29,59,17,34],[29,61,17,41,"segments"],[29,69,17,34],[29,71,17,51,"value"],[29,76,17,34],[29,78,17,61],[30,0,18,2],[30,8,18,6,"segments"],[30,16,18,14],[30,17,18,15,"length"],[30,23,18,6],[30,28,18,26],[30,29,18,2],[30,31,18,29],[31,0,19,4],[31,31,19,16,"data"],[31,35,19,4],[31,71,20,7,"segments"],[31,79,20,15],[31,80,20,16],[31,81,20,15],[31,82,19,4],[31,84,20,21,"value"],[31,89,19,4],[32,0,22,3],[34,0,24,2],[34,8,24,6,"data"],[34,12,24,10],[34,13,24,11,"segments"],[34,21,24,19],[34,22,24,20],[34,23,24,19],[34,24,24,10],[34,25,24,2],[34,27,24,25],[35,0,25,4],[35,31,25,16,"data"],[35,35,25,4],[35,71,26,7,"segments"],[35,79,26,15],[35,80,26,16],[35,81,26,15],[35,82,25,4],[35,84,26,21,"mergeFieldPathData"],[35,102,26,39],[35,103,26,40,"data"],[35,107,26,44],[35,108,26,45,"segments"],[35,116,26,53],[35,117,26,54],[35,118,26,53],[35,119,26,44],[35,120,26,39],[35,122,26,59,"segments"],[35,130,26,67],[35,131,26,68,"slice"],[35,136,26,59],[35,137,26,74],[35,138,26,59],[35,139,26,39],[35,141,26,78,"value"],[35,146,26,39],[35,147,25,4],[36,0,28,3],[38,0,30,2],[38,29,30,14,"data"],[38,33,30,2],[38,69,31,5,"segments"],[38,77,31,13],[38,78,31,14],[38,79,31,13],[38,80,30,2],[38,82,31,19,"buildFieldPathData"],[38,100,31,37],[38,101,31,38,"segments"],[38,109,31,46],[38,110,31,47,"slice"],[38,115,31,38],[38,116,31,53],[38,117,31,38],[38,118,31,37],[38,120,31,57,"value"],[38,125,31,37],[38,126,30,2],[39,0,33,1],[39,3,17,7],[43,0,34,7],[43,6,34,13,"parseUpdateArgs"],[43,21,34,28],[43,24,34,31],[43,33,34,13,"parseUpdateArgs"],[43,48,34,31],[43,49,34,32,"args"],[43,53,34,31],[43,55,34,38,"methodName"],[43,65,34,31],[43,67,34,53],[44,0,35,2],[44,8,35,6,"data"],[44,12,35,10],[44,15,35,13],[44,17,35,2],[46,0,37,2],[46,8,37,6,"args"],[46,12,37,10],[46,13,37,11,"length"],[46,19,37,6],[46,24,37,22],[46,25,37,2],[46,27,37,25],[47,0,38,4],[47,10,38,8],[47,11,38,9],[47,32,38,18,"args"],[47,36,38,22],[47,37,38,23],[47,38,38,22],[47,39,38,9],[47,40,38,4],[47,42,38,28],[48,0,39,6],[48,14,39,12],[48,18,39,16,"Error"],[48,23,39,12],[48,24,39,25,"methodName"],[48,34,39,12],[48,105,39,6],[49,0,40,5],[51,0,37,25],[51,47,42,13,"args"],[51,51,37,25],[53,0,42,5,"data"],[53,6,42,5,"data"],[53,10,37,25],[54,0,43,3],[54,5,37,2],[54,11,43,9],[54,15,43,13,"args"],[54,19,43,17],[54,20,43,18,"length"],[54,26,43,13],[54,29,43,27],[54,30,43,13],[54,35,43,33],[54,36,43,9],[54,38,43,36],[55,0,44,4],[55,12,44,10],[55,16,44,14,"Error"],[55,21,44,10],[55,22,44,23,"methodName"],[55,32,44,10],[55,145,44,4],[56,0,45,3],[56,5,43,9],[56,11,45,9],[57,0,46,4],[57,11,46,9],[57,15,46,13,"i"],[57,16,46,14],[57,19,46,17],[57,20,46,4],[57,22,46,20,"i"],[57,23,46,21],[57,26,46,24,"args"],[57,30,46,28],[57,31,46,29,"length"],[57,37,46,4],[57,39,46,37,"i"],[57,40,46,38],[57,44,46,42],[57,45,46,4],[57,47,46,45],[58,0,47,6],[58,12,47,12,"key"],[58,15,47,15],[58,18,47,18,"args"],[58,22,47,22],[58,23,47,23,"i"],[58,24,47,22],[58,25,47,6],[59,0,48,6],[59,12,48,12,"value"],[59,17,48,17],[59,20,48,20,"args"],[59,24,48,24],[59,25,48,25,"i"],[59,26,48,26],[59,29,48,29],[59,30,48,24],[59,31,48,6],[61,0,50,6],[61,12,50,10],[61,33,50,19,"key"],[61,36,50,10],[61,37,50,6],[61,39,50,25],[62,0,51,8,"data"],[62,10,51,8,"data"],[62,14,51,12],[62,15,51,13,"key"],[62,18,51,12],[62,19,51,8],[62,22,51,20,"value"],[62,27,51,8],[63,0,52,7],[63,9,50,6],[63,15,52,13],[63,19,52,17,"key"],[63,22,52,20],[63,34,52,32,"FieldPath"],[63,52,52,13],[63,54,52,43],[64,0,53,8,"data"],[64,10,53,8,"data"],[64,14,53,12],[64,17,53,15,"mergeFieldPathData"],[64,35,53,33],[64,36,53,34,"data"],[64,40,53,33],[64,42,53,40,"key"],[64,45,53,43],[64,46,53,44,"_segments"],[64,55,53,33],[64,57,53,55,"value"],[64,62,53,33],[64,63,53,8],[65,0,54,7],[65,9,52,13],[65,15,54,13],[66,0,55,8],[66,16,55,14],[66,20,55,18,"Error"],[66,25,55,14],[66,26,55,27,"methodName"],[66,36,55,14],[66,71,55,67,"i"],[66,72,55,14],[66,108,55,8],[67,0,56,7],[68,0,57,5],[69,0,58,3],[71,0,60,2],[71,11,60,9,"data"],[71,15,60,2],[72,0,61,1],[72,3,34,7]]},"type":"js/module"}]}