{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var Timestamp = function () {\n    (0, _createClass2.default)(Timestamp, null, [{\n      key: \"now\",\n      value: function now() {\n        return Timestamp.fromMillis(Date.now());\n      }\n    }, {\n      key: \"fromDate\",\n      value: function fromDate(date) {\n        return Timestamp.fromMillis(date.getTime());\n      }\n    }, {\n      key: \"fromMillis\",\n      value: function fromMillis(milliseconds) {\n        var seconds = Math.floor(milliseconds / 1000);\n        var nanoseconds = (milliseconds - seconds * 1000) * 1e6;\n        return new Timestamp(seconds, nanoseconds);\n      }\n    }]);\n\n    function Timestamp(seconds, nanoseconds) {\n      (0, _classCallCheck2.default)(this, Timestamp);\n\n      if (nanoseconds < 0) {\n        throw new Error(\"Timestamp nanoseconds out of range: \" + nanoseconds);\n      }\n\n      if (nanoseconds >= 1e9) {\n        throw new Error(\"Timestamp nanoseconds out of range: \" + nanoseconds);\n      }\n\n      if (seconds < -62135596800) {\n        throw new Error(\"Timestamp seconds out of range: \" + seconds);\n      }\n\n      if (seconds >= 253402300800) {\n        throw new Error(\"Timestamp seconds out of range: \" + seconds);\n      }\n\n      this.seconds = seconds;\n      this.nanoseconds = nanoseconds;\n    }\n\n    (0, _createClass2.default)(Timestamp, [{\n      key: \"toDate\",\n      value: function toDate() {\n        return new Date(this.toMillis());\n      }\n    }, {\n      key: \"toMillis\",\n      value: function toMillis() {\n        return this.seconds * 1000 + this.nanoseconds / 1e6;\n      }\n    }, {\n      key: \"isEqual\",\n      value: function isEqual(other) {\n        return other.seconds === this.seconds && other.nanoseconds === this.nanoseconds;\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n      }\n    }]);\n    return Timestamp;\n  }();\n\n  exports.default = Timestamp;\n});","map":[[13,6,26,21,"Timestamp"],[13,15],[16,28,27,15],[17,0,28,4],[17,15,28,11,"Timestamp"],[17,24,28,20],[17,25,28,21,"fromMillis"],[17,35,28,11],[17,36,28,32,"Date"],[17,40,28,36],[17,41,28,37,"now"],[17,44,28,32],[17,46,28,11],[17,47,28,4],[18,0,29,3],[21,31,31,18,"date"],[21,35],[21,37,31,24],[22,0,32,4],[22,15,32,11,"Timestamp"],[22,24,32,20],[22,25,32,21,"fromMillis"],[22,35,32,11],[22,36,32,32,"date"],[22,40,32,36],[22,41,32,37,"getTime"],[22,48,32,32],[22,50,32,11],[22,51,32,4],[23,0,33,3],[26,33,35,20,"milliseconds"],[26,45],[26,47,35,34],[27,0,36,4],[27,12,36,10,"seconds"],[27,19,36,17],[27,22,36,20,"Math"],[27,26,36,24],[27,27,36,25,"floor"],[27,32,36,20],[27,33,36,31,"milliseconds"],[27,45,36,43],[27,48,36,46],[27,52,36,20],[27,53,36,4],[28,0,37,4],[28,12,37,10,"nanoseconds"],[28,23,37,21],[28,26,37,24],[28,27,37,25,"milliseconds"],[28,39,37,37],[28,42,37,40,"seconds"],[28,49,37,47],[28,52,37,50],[28,56,37,24],[28,60,37,58],[28,63,37,4],[29,0,38,4],[29,15,38,11],[29,19,38,15,"Timestamp"],[29,28,38,11],[29,29,38,25,"seconds"],[29,36,38,11],[29,38,38,34,"nanoseconds"],[29,49,38,11],[29,50,38,4],[30,0,39,3],[33,0,41,2],[33,23,41,14,"seconds"],[33,30,41,2],[33,32,41,23,"nanoseconds"],[33,43,41,2],[33,45,41,36],[34,0,41,36],[36,0,42,4],[36,10,42,8,"nanoseconds"],[36,21,42,19],[36,24,42,22],[36,25,42,4],[36,27,42,25],[37,0,43,6],[37,14,43,12],[37,18,43,16,"Error"],[37,23,43,12],[37,65,43,61,"nanoseconds"],[37,76,43,12],[37,77,43,6],[38,0,44,5],[40,0,46,4],[40,10,46,8,"nanoseconds"],[40,21,46,19],[40,25,46,23],[40,28,46,4],[40,30,46,28],[41,0,47,6],[41,14,47,12],[41,18,47,16,"Error"],[41,23,47,12],[41,65,47,61,"nanoseconds"],[41,76,47,12],[41,77,47,6],[42,0,48,5],[44,0,51,4],[44,10,51,8,"seconds"],[44,17,51,15],[44,20,51,18],[44,21,51,19],[44,32,51,4],[44,34,51,32],[45,0,52,6],[45,14,52,12],[45,18,52,16,"Error"],[45,23,52,12],[45,61,52,57,"seconds"],[45,68,52,12],[45,69,52,6],[46,0,53,5],[48,0,56,4],[48,10,56,8,"seconds"],[48,17,56,15],[48,21,56,19],[48,33,56,4],[48,35,56,33],[49,0,57,6],[49,14,57,12],[49,18,57,16,"Error"],[49,23,57,12],[49,61,57,57,"seconds"],[49,68,57,12],[49,69,57,6],[50,0,58,5],[52,0,60,4],[52,11,60,9,"seconds"],[52,18,60,4],[52,21,60,19,"seconds"],[52,28,60,4],[53,0,61,4],[53,11,61,9,"nanoseconds"],[53,22,61,4],[53,25,61,23,"nanoseconds"],[53,36,61,4],[54,0,62,3],[58,31,64,11],[59,0,65,4],[59,15,65,11],[59,19,65,15,"Date"],[59,23,65,11],[59,24,65,20],[59,29,65,25,"toMillis"],[59,37,65,20],[59,39,65,11],[59,40,65,4],[60,0,66,3],[63,33,68,13],[64,0,69,4],[64,15,69,11],[64,20,69,16,"seconds"],[64,27,69,11],[64,30,69,26],[64,34,69,11],[64,37,69,33],[64,42,69,38,"nanoseconds"],[64,53,69,33],[64,56,69,52],[64,59,69,4],[65,0,70,3],[68,30,72,10,"other"],[68,35],[68,37,72,17],[69,0,73,4],[69,15,73,11,"other"],[69,20,73,16],[69,21,73,17,"seconds"],[69,28,73,11],[69,33,73,29],[69,38,73,34,"seconds"],[69,45,73,11],[69,49,73,45,"other"],[69,54,73,50],[69,55,73,51,"nanoseconds"],[69,66,73,45],[69,71,73,67],[69,76,73,72,"nanoseconds"],[69,87,73,4],[70,0,74,3],[73,33,76,13],[74,0,77,4],[74,38,77,32],[74,43,77,37,"seconds"],[74,50,77,4],[74,72,77,61],[74,77,77,66,"nanoseconds"],[74,88,77,4],[75,0,78,3]]},"type":"js/module"}]}