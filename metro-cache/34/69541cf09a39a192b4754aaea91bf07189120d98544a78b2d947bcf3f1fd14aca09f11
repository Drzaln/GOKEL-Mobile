{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"../../utils/Base64","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _Base = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../utils/Base64\"));\n\n  var Blob = function () {\n    function Blob(binaryString) {\n      (0, _classCallCheck2.default)(this, Blob);\n      this._binaryString = binaryString;\n    }\n\n    (0, _createClass2.default)(Blob, [{\n      key: \"isEqual\",\n      value: function isEqual(blob) {\n        if (!(blob instanceof Blob)) {\n          throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n        }\n\n        return this._binaryString === blob._binaryString;\n      }\n    }, {\n      key: \"toBase64\",\n      value: function toBase64() {\n        return _Base.default.btoa(this._binaryString);\n      }\n    }, {\n      key: \"toUint8Array\",\n      value: function toUint8Array() {\n        return new Uint8Array(this._binaryString.split('').map(function (c) {\n          return c.charCodeAt(0);\n        }));\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"firestore.Blob(base64: \" + this.toBase64() + \")\";\n      }\n    }], [{\n      key: \"fromBase64String\",\n      value: function fromBase64String(base64) {\n        if (typeof base64 !== 'string' || base64.length < 1) {\n          throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');\n        }\n\n        return new Blob(_Base.default.atob(base64));\n      }\n    }, {\n      key: \"fromUint8Array\",\n      value: function fromUint8Array(array) {\n        if (!(array instanceof Uint8Array)) {\n          throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n        }\n\n        return new Blob(Array.prototype.map.call(array, function (char) {\n          return String.fromCharCode(char);\n        }).join(''));\n      }\n    }]);\n    return Blob;\n  }();\n\n  exports.default = Blob;\n});","map":[[13,0,1,0],[15,6,2,21,"Blob"],[15,10],[16,0,3,2],[16,18,3,14,"binaryString"],[16,30,3,2],[16,32,3,28],[17,0,3,28],[18,0,4,4],[18,11,4,9,"_binaryString"],[18,24,4,4],[18,27,4,25,"binaryString"],[18,39,4,4],[19,0,5,3],[23,30,44,10,"blob"],[23,34],[23,36,44,16],[24,0,45,4],[24,12,45,8],[24,14,45,10,"blob"],[24,18,45,14],[24,30,45,26,"Blob"],[24,34,45,8],[24,35,45,4],[24,37,45,33],[25,0,46,6],[25,16,46,12],[25,20,46,16,"Error"],[25,25,46,12],[25,26,46,22],[25,78,46,12],[25,79,46,6],[26,0,47,5],[28,0,49,4],[28,15,49,11],[28,20,49,16,"_binaryString"],[28,33,49,11],[28,38,49,34,"blob"],[28,42,49,38],[28,43,49,39,"_binaryString"],[28,56,49,4],[29,0,50,3],[32,33,59,13],[33,0,60,4],[33,15,60,11,"Base64"],[33,29,60,18,"btoa"],[33,33,60,11],[33,34,60,23],[33,39,60,28,"_binaryString"],[33,52,60,11],[33,53,60,4],[34,0,61,3],[37,37,70,17],[38,0,71,4],[38,15,71,11],[38,19,71,15,"Uint8Array"],[38,29,71,11],[38,30,71,26],[38,35,71,31,"_binaryString"],[38,48,71,26],[38,49,71,45,"split"],[38,54,71,26],[38,55,71,51],[38,57,71,26],[38,59,71,55,"map"],[38,62,71,26],[38,63,71,59],[38,73,71,59,"c"],[38,74,71,60],[39,0,71,60],[39,17,71,64,"c"],[39,18,71,65],[39,19,71,66,"charCodeAt"],[39,29,71,64],[39,30,71,77],[39,31,71,64],[39,32,71,60],[40,0,71,60],[40,9,71,26],[40,10,71,11],[40,11,71,4],[41,0,72,3],[44,33,81,13],[45,0,82,4],[45,43,82,37],[45,48,82,42,"toBase64"],[45,56,82,37],[45,58,82,4],[46,0,83,3],[49,39,14,26,"base64"],[49,45],[49,47,14,34],[50,0,15,4],[50,12,15,8],[50,19,15,15,"base64"],[50,25,15,8],[50,30,15,26],[50,38,15,8],[50,42,15,38,"base64"],[50,48,15,44],[50,49,15,45,"length"],[50,55,15,38],[50,58,15,54],[50,59,15,4],[50,61,15,57],[51,0,16,6],[51,16,16,12],[51,20,16,16,"Error"],[51,25,16,12],[51,26,16,22],[51,110,16,12],[51,111,16,6],[52,0,17,5],[54,0,19,4],[54,15,19,11],[54,19,19,15,"Blob"],[54,23,19,11],[54,24,19,20,"Base64"],[54,38,19,27,"atob"],[54,42,19,20],[54,43,19,32,"base64"],[54,49,19,20],[54,50,19,11],[54,51,19,4],[55,0,20,3],[58,37,29,24,"array"],[58,42],[58,44,29,31],[59,0,30,4],[59,12,30,8],[59,14,30,10,"array"],[59,19,30,15],[59,31,30,27,"Uint8Array"],[59,41,30,8],[59,42,30,4],[59,44,30,40],[60,0,31,6],[60,16,31,12],[60,20,31,16,"Error"],[60,25,31,12],[60,26,31,22],[60,91,31,12],[60,92,31,6],[61,0,32,5],[63,0,34,4],[63,15,34,11],[63,19,34,15,"Blob"],[63,23,34,11],[63,24,34,20,"Array"],[63,29,34,25],[63,30,34,26,"prototype"],[63,39,34,20],[63,40,34,36,"map"],[63,43,34,20],[63,44,34,40,"call"],[63,48,34,20],[63,49,34,45,"array"],[63,54,34,20],[63,56,34,52],[63,66,34,52,"char"],[63,70,34,56],[64,0,34,56],[64,17,34,60,"String"],[64,23,34,66],[64,24,34,67,"fromCharCode"],[64,36,34,60],[64,37,34,80,"char"],[64,41,34,60],[64,42,34,56],[65,0,34,56],[65,9,34,20],[65,11,34,87,"join"],[65,15,34,20],[65,16,34,92],[65,18,34,20],[65,19,34,11],[65,20,34,4],[66,0,35,3]]},"type":"js/module"}]}