{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"./Query","data":{"isAsync":false}},{"name":"./DataSnapshot","data":{"isAsync":false}},{"name":"./OnDisconnect","data":{"isAsync":false}},{"name":"../../utils/log","data":{"isAsync":false}},{"name":"../../utils/native","data":{"isAsync":false}},{"name":"../../utils/ReferenceBase","data":{"isAsync":false}},{"name":"../../utils","data":{"isAsync":false}},{"name":"../../utils/SyncTree","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _Query = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./Query\"));\n\n  var _DataSnapshot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./DataSnapshot\"));\n\n  var _OnDisconnect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./OnDisconnect\"));\n\n  var _log = _$$_REQUIRE(_dependencyMap[11], \"../../utils/log\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[12], \"../../utils/native\");\n\n  var _ReferenceBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../../utils/ReferenceBase\"));\n\n  var _utils = _$$_REQUIRE(_dependencyMap[14], \"../../utils\");\n\n  var _SyncTree = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../../utils/SyncTree\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var listeners = 0;\n  var ReferenceEventTypes = {\n    value: 'value',\n    child_added: 'child_added',\n    child_removed: 'child_removed',\n    child_changed: 'child_changed',\n    child_moved: 'child_moved'\n  };\n\n  var Reference = function (_ReferenceBase) {\n    (0, _inherits2.default)(Reference, _ReferenceBase);\n\n    function Reference(database, path, existingModifiers) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Reference);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Reference).call(this, path));\n      _this._refListeners = {};\n      _this._database = database;\n      _this._query = new _Query.default((0, _assertThisInitialized2.default)(_this), existingModifiers);\n      (0, _log.getLogger)(database).debug('Created new Reference', _this._getRefKey());\n      return _this;\n    }\n\n    (0, _createClass2.default)(Reference, [{\n      key: \"keepSynced\",\n      value: function keepSynced(bool) {\n        return (0, _native.getNativeModule)(this._database).keepSynced(this._getRefKey(), this.path, this._query.getModifiers(), bool);\n      }\n    }, {\n      key: \"set\",\n      value: function set(value, onComplete) {\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).set(this.path, this._serializeAnyType(value)), onComplete);\n      }\n    }, {\n      key: \"setPriority\",\n      value: function setPriority(priority, onComplete) {\n        var _priority = this._serializeAnyType(priority);\n\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).setPriority(this.path, _priority), onComplete);\n      }\n    }, {\n      key: \"setWithPriority\",\n      value: function setWithPriority(value, priority, onComplete) {\n        var _value = this._serializeAnyType(value);\n\n        var _priority = this._serializeAnyType(priority);\n\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).setWithPriority(this.path, _value, _priority), onComplete);\n      }\n    }, {\n      key: \"update\",\n      value: function update(val, onComplete) {\n        var value = this._serializeObject(val);\n\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).update(this.path, value), onComplete);\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(onComplete) {\n        return (0, _utils.promiseOrCallback)((0, _native.getNativeModule)(this._database).remove(this.path), onComplete);\n      }\n    }, {\n      key: \"transaction\",\n      value: function transaction(transactionUpdate, onComplete) {\n        var _this2 = this;\n\n        var applyLocally = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (!(0, _utils.isFunction)(transactionUpdate)) {\n          return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n        }\n\n        return new Promise(function (resolve, reject) {\n          var onCompleteWrapper = function onCompleteWrapper(error, committed, snapshotData) {\n            if ((0, _utils.isFunction)(onComplete)) {\n              if (error) {\n                onComplete(error, committed, null);\n              } else {\n                onComplete(null, committed, new _DataSnapshot.default(_this2, snapshotData));\n              }\n            }\n\n            if (error) return reject(error);\n            return resolve({\n              committed: committed,\n              snapshot: new _DataSnapshot.default(_this2, snapshotData)\n            });\n          };\n\n          _this2._database._transactionHandler.add(_this2, transactionUpdate, onCompleteWrapper, applyLocally);\n        });\n      }\n    }, {\n      key: \"once\",\n      value: function once() {\n        var _this3 = this;\n\n        var eventName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n        var successCallback = arguments.length > 1 ? arguments[1] : undefined;\n        var cancelOrContext = arguments.length > 2 ? arguments[2] : undefined;\n        var context = arguments.length > 3 ? arguments[3] : undefined;\n        return (0, _native.getNativeModule)(this._database).once(this._getRefKey(), this.path, this._query.getModifiers(), eventName).then(function (_ref) {\n          var snapshot = _ref.snapshot;\n\n          var _snapshot = new _DataSnapshot.default(_this3, snapshot);\n\n          if ((0, _utils.isFunction)(successCallback)) {\n            if ((0, _utils.isObject)(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n            if (context && (0, _utils.isObject)(context)) successCallback.bind(context)(_snapshot);\n            successCallback(_snapshot);\n          }\n\n          return _snapshot;\n        }).catch(function (error) {\n          if ((0, _utils.isFunction)(cancelOrContext)) return cancelOrContext(error);\n          throw error;\n        });\n      }\n    }, {\n      key: \"push\",\n      value: function push(value, onComplete) {\n        var name = (0, _utils.generatePushID)(this._database._serverTimeOffset);\n        var pushRef = this.child(name);\n        var thennablePushRef = this.child(name);\n        var promise;\n\n        if (value != null) {\n          promise = thennablePushRef.set(value, onComplete).then(function () {\n            return pushRef;\n          });\n        } else {\n          promise = Promise.resolve(pushRef);\n        }\n\n        thennablePushRef.then = promise.then.bind(promise);\n        thennablePushRef.catch = promise.catch.bind(promise);\n\n        if ((0, _utils.isFunction)(onComplete)) {\n          promise.catch(function () {});\n        }\n\n        return thennablePushRef;\n      }\n    }, {\n      key: \"orderByKey\",\n      value: function orderByKey() {\n        return this.orderBy('orderByKey');\n      }\n    }, {\n      key: \"orderByPriority\",\n      value: function orderByPriority() {\n        return this.orderBy('orderByPriority');\n      }\n    }, {\n      key: \"orderByValue\",\n      value: function orderByValue() {\n        return this.orderBy('orderByValue');\n      }\n    }, {\n      key: \"orderByChild\",\n      value: function orderByChild(key) {\n        return this.orderBy('orderByChild', key);\n      }\n    }, {\n      key: \"orderBy\",\n      value: function orderBy(name, key) {\n        var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n        newRef._query.orderBy(name, key);\n\n        return newRef;\n      }\n    }, {\n      key: \"limitToLast\",\n      value: function limitToLast(limit) {\n        return this.limit('limitToLast', limit);\n      }\n    }, {\n      key: \"limitToFirst\",\n      value: function limitToFirst(limit) {\n        return this.limit('limitToFirst', limit);\n      }\n    }, {\n      key: \"limit\",\n      value: function limit(name, _limit) {\n        var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n        newRef._query.limit(name, _limit);\n\n        return newRef;\n      }\n    }, {\n      key: \"equalTo\",\n      value: function equalTo(value, key) {\n        return this.filter('equalTo', value, key);\n      }\n    }, {\n      key: \"endAt\",\n      value: function endAt(value, key) {\n        return this.filter('endAt', value, key);\n      }\n    }, {\n      key: \"startAt\",\n      value: function startAt(value, key) {\n        return this.filter('startAt', value, key);\n      }\n    }, {\n      key: \"filter\",\n      value: function filter(name, value, key) {\n        var newRef = new Reference(this._database, this.path, this._query.getModifiers());\n\n        newRef._query.filter(name, value, key);\n\n        return newRef;\n      }\n    }, {\n      key: \"onDisconnect\",\n      value: function onDisconnect() {\n        return new _OnDisconnect.default(this);\n      }\n    }, {\n      key: \"child\",\n      value: function child(path) {\n        return new Reference(this._database, this.path + \"/\" + path);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"\" + this._database.databaseUrl + this.path;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.toString();\n      }\n    }, {\n      key: \"isEqual\",\n      value: function isEqual(otherRef) {\n        return !!otherRef && otherRef.constructor === Reference && otherRef.key === this.key && this._query.queryIdentifier() === otherRef._query.queryIdentifier();\n      }\n    }, {\n      key: \"_getRegistrationKey\",\n      value: function _getRegistrationKey(eventType) {\n        return \"$\" + this._database.databaseUrl + \"$/\" + this.path + \"$\" + this._query.queryIdentifier() + \"$\" + listeners + \"$\" + eventType;\n      }\n    }, {\n      key: \"_getRefKey\",\n      value: function _getRefKey() {\n        return \"$\" + this._database.databaseUrl + \"$/\" + this.path + \"$\" + this._query.queryIdentifier();\n      }\n    }, {\n      key: \"_serializeObject\",\n      value: function _serializeObject(obj) {\n        if (!(0, _utils.isObject)(obj)) return obj;\n        return (0, _utils.tryJSONParse)((0, _utils.tryJSONStringify)(obj));\n      }\n    }, {\n      key: \"_serializeAnyType\",\n      value: function _serializeAnyType(value) {\n        if ((0, _utils.isObject)(value)) {\n          return {\n            type: 'object',\n            value: this._serializeObject(value)\n          };\n        }\n\n        return {\n          type: typeof value,\n          value: value\n        };\n      }\n    }, {\n      key: \"on\",\n      value: function on(eventType, callback, cancelCallbackOrContext, context) {\n        if (!eventType) {\n          throw new Error('Query.on failed: Function called with 0 arguments. Expects at least 2.');\n        }\n\n        if (!(0, _utils.isString)(eventType) || !ReferenceEventTypes[eventType]) {\n          throw new Error(\"Query.on failed: First argument must be a valid string event type: \\\"\" + Object.keys(ReferenceEventTypes).join(', ') + \"\\\"\");\n        }\n\n        if (!callback) {\n          throw new Error('Query.on failed: Function called with 1 argument. Expects at least 2.');\n        }\n\n        if (!(0, _utils.isFunction)(callback)) {\n          throw new Error('Query.on failed: Second argument must be a valid function.');\n        }\n\n        if (cancelCallbackOrContext && !(0, _utils.isFunction)(cancelCallbackOrContext) && !(0, _utils.isObject)(context) && !(0, _utils.isObject)(cancelCallbackOrContext)) {\n          throw new Error('Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n        }\n\n        if (cancelCallbackOrContext && !(0, _utils.isFunction)(cancelCallbackOrContext) && context) {\n          throw new Error('Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.');\n        }\n\n        var eventRegistrationKey = this._getRegistrationKey(eventType);\n\n        var registrationCancellationKey = eventRegistrationKey + \"$cancelled\";\n\n        var _context = cancelCallbackOrContext && !(0, _utils.isFunction)(cancelCallbackOrContext) ? cancelCallbackOrContext : context;\n\n        var registrationObj = {\n          eventType: eventType,\n          ref: this,\n          path: this.path,\n          key: this._getRefKey(),\n          appName: this._database.app.name,\n          dbURL: this._database.databaseUrl,\n          eventRegistrationKey: eventRegistrationKey\n        };\n\n        _SyncTree.default.addRegistration(_objectSpread({}, registrationObj, {\n          listener: _context ? callback.bind(_context) : callback\n        }));\n\n        if (cancelCallbackOrContext && (0, _utils.isFunction)(cancelCallbackOrContext)) {\n          _SyncTree.default.addRegistration({\n            ref: this,\n            once: true,\n            path: this.path,\n            key: this._getRefKey(),\n            appName: this._database.app.name,\n            dbURL: this._database.databaseUrl,\n            eventType: eventType + \"$cancelled\",\n            eventRegistrationKey: registrationCancellationKey,\n            listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext\n          });\n        }\n\n        (0, _native.getNativeModule)(this._database).on({\n          eventType: eventType,\n          path: this.path,\n          key: this._getRefKey(),\n          appName: this._database.app.name,\n          modifiers: this._query.getModifiers(),\n          hasCancellationCallback: (0, _utils.isFunction)(cancelCallbackOrContext),\n          registration: {\n            eventRegistrationKey: eventRegistrationKey,\n            key: registrationObj.key,\n            registrationCancellationKey: registrationCancellationKey\n          }\n        });\n        listeners += 1;\n        return callback;\n      }\n    }, {\n      key: \"off\",\n      value: function off() {\n        var eventType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        var originalCallback = arguments.length > 1 ? arguments[1] : undefined;\n\n        if (!arguments.length) {\n          return _SyncTree.default.removeListenersForRegistrations(_SyncTree.default.getRegistrationsByPath(this.path));\n        }\n\n        if (eventType && (!(0, _utils.isString)(eventType) || !ReferenceEventTypes[eventType])) {\n          throw new Error(\"Query.off failed: First argument must be a valid string event type: \\\"\" + Object.keys(ReferenceEventTypes).join(', ') + \"\\\"\");\n        }\n\n        if (originalCallback && !(0, _utils.isFunction)(originalCallback)) {\n          throw new Error('Query.off failed: Function called with 2 arguments, but second optional argument was not a function.');\n        }\n\n        if (eventType && originalCallback) {\n          var registration = _SyncTree.default.getOneByPathEventListener(this.path, eventType, originalCallback);\n\n          if (!registration) return [];\n\n          _SyncTree.default.removeListenersForRegistrations([registration + \"$cancelled\"]);\n\n          return _SyncTree.default.removeListenerRegistrations(originalCallback, [registration]);\n        }\n\n        var registrations = _SyncTree.default.getRegistrationsByPathEvent(this.path, eventType);\n\n        _SyncTree.default.removeListenersForRegistrations(_SyncTree.default.getRegistrationsByPathEvent(this.path, eventType + \"$cancelled\"));\n\n        return _SyncTree.default.removeListenersForRegistrations(registrations);\n      }\n    }, {\n      key: \"parent\",\n      get: function get() {\n        if (this.path === '/') return null;\n        return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n      }\n    }, {\n      key: \"ref\",\n      get: function get() {\n        return this;\n      }\n    }, {\n      key: \"root\",\n      get: function get() {\n        return new Reference(this._database, '/');\n      }\n    }]);\n    return Reference;\n  }(_ReferenceBase2.default);\n\n  exports.default = Reference;\n});","map":[[23,0,5,0],[25,0,6,0],[27,0,7,0],[29,0,8,0],[31,0,9,0],[33,0,10,0],[35,0,11,0],[37,0,12,0],[43,0,14,0],[43,6,14,4,"listeners"],[43,15,14,13],[43,18,14,16],[43,19,14,0],[44,0,21,0],[44,6,21,6,"ReferenceEventTypes"],[44,25,21,25],[44,28,21,28],[45,0,22,2,"value"],[45,4,22,2,"value"],[45,9,22,7],[45,11,22,9],[45,18,21,28],[46,0,23,2,"child_added"],[46,4,23,2,"child_added"],[46,15,23,13],[46,17,23,15],[46,30,21,28],[47,0,24,2,"child_removed"],[47,4,24,2,"child_removed"],[47,17,24,15],[47,19,24,17],[47,34,21,28],[48,0,25,2,"child_changed"],[48,4,25,2,"child_changed"],[48,17,25,15],[48,19,25,17],[48,34,21,28],[49,0,26,2,"child_moved"],[49,4,26,2,"child_moved"],[49,15,26,13],[49,17,26,15],[50,0,21,28],[50,3,21,0],[52,6,56,21,"Reference"],[52,15],[55,0,57,2],[55,23,57,14,"database"],[55,31,57,2],[55,33,57,24,"path"],[55,37,57,2],[55,39,57,30,"existingModifiers"],[55,56,57,2],[55,58,57,49],[56,0,57,49],[58,0,57,49],[59,0,58,4],[59,113,58,10,"path"],[59,117,58,4],[60,0,59,4],[60,12,59,9,"_refListeners"],[60,25,59,4],[60,28,59,25],[60,30,59,4],[61,0,60,4],[61,12,60,9,"_database"],[61,21,60,4],[61,24,60,21,"database"],[61,32,60,4],[62,0,61,4],[62,12,61,9,"_query"],[62,18,61,4],[62,21,61,18],[62,25,61,22,"Query"],[62,39,61,18],[62,85,61,34,"existingModifiers"],[62,102,61,18],[62,103,61,4],[63,0,62,4],[63,26,62,14,"database"],[63,34,62,4],[63,36,62,24,"debug"],[63,41,62,4],[63,42,62,30],[63,65,62,4],[63,67,62,55],[63,73,62,60,"_getRefKey"],[63,83,62,55],[63,85,62,4],[64,0,57,49],[65,0,63,3],[69,33,76,13,"bool"],[69,37],[69,39,76,19],[70,0,77,4],[70,15,77,11],[70,44,77,27],[70,49,77,32,"_database"],[70,58,77,11],[70,60,77,43,"keepSynced"],[70,70,77,11],[70,71,77,54],[70,76,77,59,"_getRefKey"],[70,86,77,54],[70,88,77,11],[70,90,77,73],[70,95,77,78,"path"],[70,99,77,11],[70,101,77,84],[70,106,77,89,"_query"],[70,112,77,84],[70,113,77,96,"getModifiers"],[70,125,77,84],[70,127,77,11],[70,129,77,112,"bool"],[70,133,77,11],[70,134,77,4],[71,0,78,3],[74,26,89,6,"value"],[74,31],[74,33,89,13,"onComplete"],[74,43],[74,45,89,25],[75,0,90,4],[75,15,90,11],[75,45,90,29],[75,74,90,45],[75,79,90,50,"_database"],[75,88,90,29],[75,90,90,61,"set"],[75,93,90,29],[75,94,90,65],[75,99,90,70,"path"],[75,103,90,29],[75,105,90,76],[75,110,90,81,"_serializeAnyType"],[75,127,90,76],[75,128,90,99,"value"],[75,133,90,76],[75,134,90,29],[75,135,90,11],[75,137,90,108,"onComplete"],[75,147,90,11],[75,148,90,4],[76,0,91,3],[79,34,102,14,"priority"],[79,42],[79,44,102,24,"onComplete"],[79,54],[79,56,102,36],[80,0,103,4],[80,12,103,10,"_priority"],[80,21,103,19],[80,24,103,22],[80,29,103,27,"_serializeAnyType"],[80,46,103,22],[80,47,103,45,"priority"],[80,55,103,22],[80,56,103,4],[82,0,105,4],[82,15,105,11],[82,45,105,29],[82,74,105,45],[82,79,105,50,"_database"],[82,88,105,29],[82,90,105,61,"setPriority"],[82,101,105,29],[82,102,105,73],[82,107,105,78,"path"],[82,111,105,29],[82,113,105,84,"_priority"],[82,122,105,29],[82,123,105,11],[82,125,105,96,"onComplete"],[82,135,105,11],[82,136,105,4],[83,0,106,3],[86,38,118,18,"value"],[86,43],[86,45,118,25,"priority"],[86,53],[86,55,118,35,"onComplete"],[86,65],[86,67,118,47],[87,0,119,4],[87,12,119,10,"_value"],[87,18,119,16],[87,21,119,19],[87,26,119,24,"_serializeAnyType"],[87,43,119,19],[87,44,119,42,"value"],[87,49,119,19],[87,50,119,4],[89,0,121,4],[89,12,121,10,"_priority"],[89,21,121,19],[89,24,121,22],[89,29,121,27,"_serializeAnyType"],[89,46,121,22],[89,47,121,45,"priority"],[89,55,121,22],[89,56,121,4],[91,0,123,4],[91,15,123,11],[91,45,123,29],[91,74,123,45],[91,79,123,50,"_database"],[91,88,123,29],[91,90,123,61,"setWithPriority"],[91,105,123,29],[91,106,123,77],[91,111,123,82,"path"],[91,115,123,29],[91,117,123,88,"_value"],[91,123,123,29],[91,125,123,96,"_priority"],[91,134,123,29],[91,135,123,11],[91,137,123,108,"onComplete"],[91,147,123,11],[91,148,123,4],[92,0,124,3],[95,29,135,9,"val"],[95,32],[95,34,135,14,"onComplete"],[95,44],[95,46,135,26],[96,0,136,4],[96,12,136,10,"value"],[96,17,136,15],[96,20,136,18],[96,25,136,23,"_serializeObject"],[96,41,136,18],[96,42,136,40,"val"],[96,45,136,18],[96,46,136,4],[98,0,138,4],[98,15,138,11],[98,45,138,29],[98,74,138,45],[98,79,138,50,"_database"],[98,88,138,29],[98,90,138,61,"update"],[98,96,138,29],[98,97,138,68],[98,102,138,73,"path"],[98,106,138,29],[98,108,138,79,"value"],[98,113,138,29],[98,114,138,11],[98,116,138,87,"onComplete"],[98,126,138,11],[98,127,138,4],[99,0,139,3],[102,29,149,9,"onComplete"],[102,39],[102,41,149,21],[103,0,150,4],[103,15,150,11],[103,45,150,29],[103,74,150,45],[103,79,150,50,"_database"],[103,88,150,29],[103,90,150,61,"remove"],[103,96,150,29],[103,97,150,68],[103,102,150,73,"path"],[103,106,150,29],[103,107,150,11],[103,109,150,80,"onComplete"],[103,119,150,11],[103,120,150,4],[104,0,151,3],[107,34,162,14,"transactionUpdate"],[107,51],[107,53,162,33,"onComplete"],[107,63],[107,65,162,67],[108,0,162,67],[110,0,162,67],[110,12,162,45,"applyLocally"],[110,24,162,67],[110,95,162,60],[110,100,162,67],[112,0,163,4],[112,12,163,8],[112,13,163,9],[112,36,163,20,"transactionUpdate"],[112,53,163,9],[112,54,163,4],[112,56,163,40],[113,0,164,6],[113,17,164,13,"Promise"],[113,24,164,20],[113,25,164,21,"reject"],[113,31,164,13],[113,32,164,28],[113,36,164,32,"Error"],[113,41,164,28],[113,42,164,38],[113,88,164,28],[113,89,164,13],[113,90,164,6],[114,0,165,5],[116,0,167,4],[116,15,167,11],[116,19,167,15,"Promise"],[116,26,167,11],[116,27,167,23],[116,37,167,24,"resolve"],[116,44,167,23],[116,46,167,33,"reject"],[116,52,167,23],[116,54,167,44],[117,0,168,6],[117,14,168,12,"onCompleteWrapper"],[117,31,168,29],[117,34,168,32],[117,43,168,12,"onCompleteWrapper"],[117,60,168,32],[117,61,168,33,"error"],[117,66,168,32],[117,68,168,40,"committed"],[117,77,168,32],[117,79,168,51,"snapshotData"],[117,91,168,32],[117,93,168,68],[118,0,169,8],[118,16,169,12],[118,39,169,23,"onComplete"],[118,49,169,12],[118,50,169,8],[118,52,169,36],[119,0,170,10],[119,18,170,14,"error"],[119,23,170,10],[119,25,170,21],[120,0,171,12,"onComplete"],[120,16,171,12,"onComplete"],[120,26,171,22],[120,27,171,23,"error"],[120,32,171,22],[120,34,171,30,"committed"],[120,43,171,22],[120,45,171,41],[120,49,171,22],[120,50,171,12],[121,0,172,11],[121,15,170,10],[121,21,172,17],[122,0,173,12,"onComplete"],[122,16,173,12,"onComplete"],[122,26,173,22],[122,27,173,23],[122,31,173,22],[122,33,173,29,"committed"],[122,42,173,22],[122,44,173,40],[122,48,173,44,"DataSnapshot"],[122,69,173,40],[122,70,173,57],[122,76,173,40],[122,78,173,63,"snapshotData"],[122,90,173,40],[122,91,173,22],[122,92,173,12],[123,0,174,11],[124,0,175,9],[126,0,177,8],[126,16,177,12,"error"],[126,21,177,8],[126,23,177,19],[126,30,177,26,"reject"],[126,36,177,32],[126,37,177,33,"error"],[126,42,177,32],[126,43,177,19],[127,0,178,8],[127,19,178,15,"resolve"],[127,26,178,22],[127,27,178,23],[128,0,179,10,"committed"],[128,14,179,10,"committed"],[128,23,179,19],[128,25,179,10,"committed"],[128,34,178,23],[129,0,180,10,"snapshot"],[129,14,180,10,"snapshot"],[129,22,180,18],[129,24,180,20],[129,28,180,24,"DataSnapshot"],[129,49,180,20],[129,50,180,37],[129,56,180,20],[129,58,180,43,"snapshotData"],[129,70,180,20],[130,0,178,23],[130,13,178,22],[130,14,178,8],[131,0,182,7],[131,11,168,6],[133,0,185,6],[133,10,185,6],[133,16,185,10],[133,17,185,11,"_database"],[133,26,185,6],[133,27,185,21,"_transactionHandler"],[133,46,185,6],[133,47,185,41,"add"],[133,50,185,6],[133,51,185,45],[133,57,185,6],[133,59,185,51,"transactionUpdate"],[133,76,185,6],[133,78,185,70,"onCompleteWrapper"],[133,95,185,6],[133,97,185,89,"applyLocally"],[133,109,185,6],[134,0,186,5],[134,9,167,11],[134,10,167,4],[135,0,187,3],[138,29,198,71],[139,0,198,71],[141,0,198,71],[141,12,198,7,"eventName"],[141,21,198,71],[141,92,198,19],[141,99,198,71],[142,0,198,71],[142,12,198,28,"successCallback"],[142,27,198,71],[143,0,198,71],[143,12,198,45,"cancelOrContext"],[143,27,198,71],[144,0,198,71],[144,12,198,62,"context"],[144,19,198,71],[145,0,199,4],[145,15,199,11],[145,44,199,27],[145,49,199,32,"_database"],[145,58,199,11],[145,60,199,43,"once"],[145,64,199,11],[145,65,199,48],[145,70,199,53,"_getRefKey"],[145,80,199,48],[145,82,199,11],[145,84,199,67],[145,89,199,72,"path"],[145,93,199,11],[145,95,199,78],[145,100,199,83,"_query"],[145,106,199,78],[145,107,199,90,"getModifiers"],[145,119,199,78],[145,121,199,11],[145,123,199,106,"eventName"],[145,132,199,11],[145,134,199,117,"then"],[145,138,199,11],[145,139,199,122],[145,155,201,10],[146,0,201,10],[146,14,200,6,"snapshot"],[146,22,201,10],[146,30,200,6,"snapshot"],[146,38,201,10],[148,0,202,6],[148,14,202,12,"_snapshot"],[148,23,202,21],[148,26,202,24],[148,30,202,28,"DataSnapshot"],[148,51,202,24],[148,52,202,41],[148,58,202,24],[148,60,202,47,"snapshot"],[148,68,202,24],[148,69,202,6],[150,0,204,6],[150,14,204,10],[150,37,204,21,"successCallback"],[150,52,204,10],[150,53,204,6],[150,55,204,39],[151,0,205,8],[151,16,205,12],[151,37,205,21,"cancelOrContext"],[151,52,205,12],[151,53,205,8],[151,55,205,39,"successCallback"],[151,70,205,54],[151,71,205,55,"bind"],[151,75,205,39],[151,76,205,60,"cancelOrContext"],[151,91,205,39],[151,93,205,77,"_snapshot"],[151,102,205,39],[152,0,206,8],[152,16,206,12,"context"],[152,23,206,19],[152,27,206,23],[152,48,206,32,"context"],[152,55,206,23],[152,56,206,8],[152,58,206,42,"successCallback"],[152,73,206,57],[152,74,206,58,"bind"],[152,78,206,42],[152,79,206,63,"context"],[152,86,206,42],[152,88,206,72,"_snapshot"],[152,97,206,42],[153,0,207,8,"successCallback"],[153,12,207,8,"successCallback"],[153,27,207,23],[153,28,207,24,"_snapshot"],[153,37,207,23],[153,38,207,8],[154,0,208,7],[156,0,210,6],[156,17,210,13,"_snapshot"],[156,26,210,6],[157,0,211,5],[157,9,199,11],[157,11,211,7,"catch"],[157,16,199,11],[157,17,211,13],[157,27,211,13,"error"],[157,32,211,18],[157,34,211,22],[158,0,212,6],[158,14,212,10],[158,37,212,21,"cancelOrContext"],[158,52,212,10],[158,53,212,6],[158,55,212,39],[158,62,212,46,"cancelOrContext"],[158,77,212,61],[158,78,212,62,"error"],[158,83,212,61],[158,84,212,39],[159,0,213,6],[159,16,213,12,"error"],[159,21,213,6],[160,0,214,5],[160,9,199,11],[160,10,199,4],[161,0,215,3],[164,27,224,7,"value"],[164,32],[164,34,224,14,"onComplete"],[164,44],[164,46,224,26],[165,0,225,4],[165,12,225,10,"name"],[165,16,225,14],[165,19,225,17],[165,46,225,32],[165,51,225,37,"_database"],[165,60,225,32],[165,61,225,47,"_serverTimeOffset"],[165,78,225,17],[165,79,225,4],[166,0,226,4],[166,12,226,10,"pushRef"],[166,19,226,17],[166,22,226,20],[166,27,226,25,"child"],[166,32,226,20],[166,33,226,31,"name"],[166,37,226,20],[166,38,226,4],[167,0,227,4],[167,12,227,10,"thennablePushRef"],[167,28,227,26],[167,31,227,29],[167,36,227,34,"child"],[167,41,227,29],[167,42,227,40,"name"],[167,46,227,29],[167,47,227,4],[168,0,228,4],[168,12,228,8,"promise"],[168,19,228,4],[170,0,230,4],[170,12,230,8,"value"],[170,17,230,13],[170,21,230,17],[170,25,230,4],[170,27,230,23],[171,0,231,6,"promise"],[171,10,231,6,"promise"],[171,17,231,13],[171,20,231,16,"thennablePushRef"],[171,36,231,32],[171,37,231,33,"set"],[171,40,231,16],[171,41,231,37,"value"],[171,46,231,16],[171,48,231,44,"onComplete"],[171,58,231,16],[171,60,231,56,"then"],[171,64,231,16],[171,65,231,61],[172,0,231,61],[172,19,231,67,"pushRef"],[172,26,231,61],[173,0,231,61],[173,11,231,16],[173,12,231,6],[174,0,232,5],[174,9,230,4],[174,15,232,11],[175,0,233,6,"promise"],[175,10,233,6,"promise"],[175,17,233,13],[175,20,233,16,"Promise"],[175,27,233,23],[175,28,233,24,"resolve"],[175,35,233,16],[175,36,233,32,"pushRef"],[175,43,233,16],[175,44,233,6],[176,0,234,5],[178,0,236,4,"thennablePushRef"],[178,8,236,4,"thennablePushRef"],[178,24,236,20],[178,25,236,21,"then"],[178,29,236,4],[178,32,236,28,"promise"],[178,39,236,35],[178,40,236,36,"then"],[178,44,236,28],[178,45,236,41,"bind"],[178,49,236,28],[178,50,236,46,"promise"],[178,57,236,28],[178,58,236,4],[179,0,237,4,"thennablePushRef"],[179,8,237,4,"thennablePushRef"],[179,24,237,20],[179,25,237,21,"catch"],[179,30,237,4],[179,33,237,29,"promise"],[179,40,237,36],[179,41,237,37,"catch"],[179,46,237,29],[179,47,237,43,"bind"],[179,51,237,29],[179,52,237,48,"promise"],[179,59,237,29],[179,60,237,4],[181,0,239,4],[181,12,239,8],[181,35,239,19,"onComplete"],[181,45,239,8],[181,46,239,4],[181,48,239,32],[182,0,240,6,"promise"],[182,10,240,6,"promise"],[182,17,240,13],[182,18,240,14,"catch"],[182,23,240,6],[182,24,240,20],[182,36,240,26],[182,37,240,28],[182,38,240,6],[183,0,241,5],[185,0,243,4],[185,15,243,11,"thennablePushRef"],[185,31,243,4],[186,0,244,3],[189,35,255,15],[190,0,256,4],[190,15,256,11],[190,20,256,16,"orderBy"],[190,27,256,11],[190,28,256,24],[190,40,256,11],[190,41,256,4],[191,0,257,3],[194,40,264,20],[195,0,265,4],[195,15,265,11],[195,20,265,16,"orderBy"],[195,27,265,11],[195,28,265,24],[195,45,265,11],[195,46,265,4],[196,0,266,3],[199,37,273,17],[200,0,274,4],[200,15,274,11],[200,20,274,16,"orderBy"],[200,27,274,11],[200,28,274,24],[200,42,274,11],[200,43,274,4],[201,0,275,3],[204,35,283,15,"key"],[204,38],[204,40,283,20],[205,0,284,4],[205,15,284,11],[205,20,284,16,"orderBy"],[205,27,284,11],[205,28,284,24],[205,42,284,11],[205,44,284,40,"key"],[205,47,284,11],[205,48,284,4],[206,0,285,3],[209,30,294,10,"name"],[209,34],[209,36,294,16,"key"],[209,39],[209,41,294,21],[210,0,295,4],[210,12,295,10,"newRef"],[210,18,295,16],[210,21,295,19],[210,25,295,23,"Reference"],[210,34,295,19],[210,35,295,33],[210,40,295,38,"_database"],[210,49,295,19],[210,51,295,49],[210,56,295,54,"path"],[210,60,295,19],[210,62,295,60],[210,67,295,65,"_query"],[210,73,295,60],[210,74,295,72,"getModifiers"],[210,86,295,60],[210,88,295,19],[210,89,295,4],[212,0,297,4,"newRef"],[212,8,297,4,"newRef"],[212,14,297,10],[212,15,297,11,"_query"],[212,21,297,4],[212,22,297,18,"orderBy"],[212,29,297,4],[212,30,297,26,"name"],[212,34,297,4],[212,36,297,32,"key"],[212,39,297,4],[214,0,299,4],[214,15,299,11,"newRef"],[214,21,299,4],[215,0,300,3],[218,34,312,14,"limit"],[218,39],[218,41,312,21],[219,0,313,4],[219,15,313,11],[219,20,313,16,"limit"],[219,25,313,11],[219,26,313,22],[219,39,313,11],[219,41,313,37,"limit"],[219,46,313,11],[219,47,313,4],[220,0,314,3],[223,35,322,15,"limit"],[223,40],[223,42,322,22],[224,0,323,4],[224,15,323,11],[224,20,323,16,"limit"],[224,25,323,11],[224,26,323,22],[224,40,323,11],[224,42,323,38,"limit"],[224,47,323,11],[224,48,323,4],[225,0,324,3],[228,28,333,8,"name"],[228,32],[228,34,333,14,"limit"],[228,40],[228,42,333,21],[229,0,334,4],[229,12,334,10,"newRef"],[229,18,334,16],[229,21,334,19],[229,25,334,23,"Reference"],[229,34,334,19],[229,35,334,33],[229,40,334,38,"_database"],[229,49,334,19],[229,51,334,49],[229,56,334,54,"path"],[229,60,334,19],[229,62,334,60],[229,67,334,65,"_query"],[229,73,334,60],[229,74,334,72,"getModifiers"],[229,86,334,60],[229,88,334,19],[229,89,334,4],[231,0,336,4,"newRef"],[231,8,336,4,"newRef"],[231,14,336,10],[231,15,336,11,"_query"],[231,21,336,4],[231,22,336,18,"limit"],[231,27,336,4],[231,28,336,24,"name"],[231,32,336,4],[231,34,336,30,"limit"],[231,40,336,4],[233,0,338,4],[233,15,338,11,"newRef"],[233,21,338,4],[234,0,339,3],[237,30,352,10,"value"],[237,35],[237,37,352,17,"key"],[237,40],[237,42,352,22],[238,0,353,4],[238,15,353,11],[238,20,353,16,"filter"],[238,26,353,11],[238,27,353,23],[238,36,353,11],[238,38,353,34,"value"],[238,43,353,11],[238,45,353,41,"key"],[238,48,353,11],[238,49,353,4],[239,0,354,3],[242,28,363,8,"value"],[242,33],[242,35,363,15,"key"],[242,38],[242,40,363,20],[243,0,364,4],[243,15,364,11],[243,20,364,16,"filter"],[243,26,364,11],[243,27,364,23],[243,34,364,11],[243,36,364,32,"value"],[243,41,364,11],[243,43,364,39,"key"],[243,46,364,11],[243,47,364,4],[244,0,365,3],[247,30,374,10,"value"],[247,35],[247,37,374,17,"key"],[247,40],[247,42,374,22],[248,0,375,4],[248,15,375,11],[248,20,375,16,"filter"],[248,26,375,11],[248,27,375,23],[248,36,375,11],[248,38,375,34,"value"],[248,43,375,11],[248,45,375,41,"key"],[248,48,375,11],[248,49,375,4],[249,0,376,3],[252,29,386,9,"name"],[252,33],[252,35,386,15,"value"],[252,40],[252,42,386,22,"key"],[252,45],[252,47,386,27],[253,0,387,4],[253,12,387,10,"newRef"],[253,18,387,16],[253,21,387,19],[253,25,387,23,"Reference"],[253,34,387,19],[253,35,387,33],[253,40,387,38,"_database"],[253,49,387,19],[253,51,387,49],[253,56,387,54,"path"],[253,60,387,19],[253,62,387,60],[253,67,387,65,"_query"],[253,73,387,60],[253,74,387,72,"getModifiers"],[253,86,387,60],[253,88,387,19],[253,89,387,4],[255,0,389,4,"newRef"],[255,8,389,4,"newRef"],[255,14,389,10],[255,15,389,11,"_query"],[255,21,389,4],[255,22,389,18,"filter"],[255,28,389,4],[255,29,389,25,"name"],[255,33,389,4],[255,35,389,31,"value"],[255,40,389,4],[255,42,389,38,"key"],[255,45,389,4],[257,0,391,4],[257,15,391,11,"newRef"],[257,21,391,4],[258,0,392,3],[261,37,399,17],[262,0,400,4],[262,15,400,11],[262,19,400,15,"OnDisconnect"],[262,40,400,11],[262,41,400,28],[262,45,400,11],[262,46,400,4],[263,0,401,3],[266,28,412,8,"path"],[266,32],[266,34,412,14],[267,0,413,4],[267,15,413,11],[267,19,413,15,"Reference"],[267,28,413,11],[267,29,413,25],[267,34,413,30,"_database"],[267,43,413,11],[267,45,413,44],[267,50,413,49,"path"],[267,54,413,11],[267,63,413,57,"path"],[267,67,413,11],[267,68,413,4],[268,0,414,3],[271,33,421,13],[272,0,422,4],[272,20,422,14],[272,25,422,19,"_database"],[272,34,422,14],[272,35,422,29,"databaseUrl"],[272,46,422,4],[272,49,422,43],[272,54,422,48,"path"],[272,58,422,4],[273,0,423,3],[276,31,430,11],[277,0,431,4],[277,15,431,11],[277,20,431,16,"toString"],[277,28,431,11],[277,30,431,4],[278,0,432,3],[281,30,443,10,"otherRef"],[281,38],[281,40,443,20],[282,0,444,4],[282,15,444,11],[282,16,444,12],[282,17,444,13,"otherRef"],[282,25,444,11],[282,29,444,25,"otherRef"],[282,37,444,33],[282,38,444,34,"constructor"],[282,49,444,25],[282,54,444,50,"Reference"],[282,63,444,11],[282,67,444,63,"otherRef"],[282,75,444,71],[282,76,444,72,"key"],[282,79,444,63],[282,84,444,80],[282,89,444,85,"key"],[282,92,444,11],[282,96,444,92],[282,101,444,97,"_query"],[282,107,444,92],[282,108,444,104,"queryIdentifier"],[282,123,444,92],[282,130,444,126,"otherRef"],[282,138,444,134],[282,139,444,135,"_query"],[282,145,444,126],[282,146,444,142,"queryIdentifier"],[282,161,444,126],[282,163,444,4],[283,0,445,3],[286,42,495,22,"eventType"],[286,51],[286,53,495,33],[287,0,496,4],[287,21,496,15],[287,26,496,20,"_database"],[287,35,496,15],[287,36,496,30,"databaseUrl"],[287,47,496,4],[287,57,496,46],[287,62,496,51,"path"],[287,66,496,4],[287,75,496,59],[287,80,496,64,"_query"],[287,86,496,59],[287,87,496,71,"queryIdentifier"],[287,102,496,59],[287,104,496,4],[287,113,496,92,"listeners"],[287,122,496,4],[287,131,496,105,"eventType"],[287,140,496,4],[288,0,497,3],[291,35,507,15],[292,0,508,4],[292,21,508,15],[292,26,508,20,"_database"],[292,35,508,15],[292,36,508,30,"databaseUrl"],[292,47,508,4],[292,57,508,46],[292,62,508,51,"path"],[292,66,508,4],[292,75,508,59],[292,80,508,64,"_query"],[292,86,508,59],[292,87,508,71,"queryIdentifier"],[292,102,508,59],[292,104,508,4],[293,0,509,3],[296,39,518,19,"obj"],[296,42],[296,44,518,24],[297,0,519,4],[297,12,519,8],[297,13,519,9],[297,34,519,18,"obj"],[297,37,519,9],[297,38,519,4],[297,40,519,24],[297,47,519,31,"obj"],[297,50,519,24],[298,0,522,4],[298,15,522,11],[298,40,522,24],[298,69,522,41,"obj"],[298,72,522,24],[298,73,522,11],[298,74,522,4],[299,0,523,3],[302,40,532,20,"value"],[302,45],[302,47,532,27],[303,0,533,4],[303,12,533,8],[303,33,533,17,"value"],[303,38,533,8],[303,39,533,4],[303,41,533,25],[304,0,534,6],[304,17,534,13],[305,0,535,8,"type"],[305,12,535,8,"type"],[305,16,535,12],[305,18,535,14],[305,26,534,13],[306,0,536,8,"value"],[306,12,536,8,"value"],[306,17,536,13],[306,19,536,15],[306,24,536,20,"_serializeObject"],[306,40,536,15],[306,41,536,37,"value"],[306,46,536,15],[307,0,534,13],[307,11,534,6],[308,0,538,5],[310,0,540,4],[310,15,540,11],[311,0,541,6,"type"],[311,10,541,6,"type"],[311,14,541,10],[311,16,541,12],[311,23,541,19,"value"],[311,28,540,11],[312,0,542,6,"value"],[312,10,542,6,"value"],[312,15,542,11],[312,17,542,6,"value"],[313,0,540,11],[313,9,540,4],[314,0,544,3],[317,25,573,5,"eventType"],[317,34],[317,36,573,16,"callback"],[317,44],[317,46,573,26,"cancelCallbackOrContext"],[317,69],[317,71,573,51,"context"],[317,78],[317,80,573,60],[318,0,574,4],[318,12,574,8],[318,13,574,9,"eventType"],[318,22,574,4],[318,24,574,20],[319,0,575,6],[319,16,575,12],[319,20,575,16,"Error"],[319,25,575,12],[319,26,575,22],[319,98,575,12],[319,99,575,6],[320,0,576,5],[322,0,578,4],[322,12,578,8],[322,13,578,9],[322,34,578,18,"eventType"],[322,43,578,9],[322,44,578,8],[322,48,578,32],[322,49,578,33,"ReferenceEventTypes"],[322,68,578,52],[322,69,578,53,"eventType"],[322,78,578,52],[322,79,578,4],[322,81,578,65],[323,0,579,6],[323,16,579,12],[323,20,579,16,"Error"],[323,25,579,12],[323,100,579,93,"Object"],[323,106,579,99],[323,107,579,100,"keys"],[323,111,579,93],[323,112,579,105,"ReferenceEventTypes"],[323,131,579,93],[323,133,579,126,"join"],[323,137,579,93],[323,138,579,131],[323,142,579,93],[323,143,579,12],[323,151,579,6],[324,0,580,5],[326,0,582,4],[326,12,582,8],[326,13,582,9,"callback"],[326,21,582,4],[326,23,582,19],[327,0,583,6],[327,16,583,12],[327,20,583,16,"Error"],[327,25,583,12],[327,26,583,22],[327,97,583,12],[327,98,583,6],[328,0,584,5],[330,0,586,4],[330,12,586,8],[330,13,586,9],[330,36,586,20,"callback"],[330,44,586,9],[330,45,586,4],[330,47,586,31],[331,0,587,6],[331,16,587,12],[331,20,587,16,"Error"],[331,25,587,12],[331,26,587,22],[331,86,587,12],[331,87,587,6],[332,0,588,5],[334,0,590,4],[334,12,590,8,"cancelCallbackOrContext"],[334,35,590,31],[334,39,590,35],[334,40,590,36],[334,63,590,47,"cancelCallbackOrContext"],[334,86,590,36],[334,87,590,8],[334,91,590,75],[334,92,590,76],[334,113,590,85,"context"],[334,120,590,76],[334,121,590,8],[334,125,590,97],[334,126,590,98],[334,147,590,107,"cancelCallbackOrContext"],[334,170,590,98],[334,171,590,4],[334,173,590,133],[335,0,591,6],[335,16,591,12],[335,20,591,16,"Error"],[335,25,591,12],[335,26,591,22],[335,152,591,12],[335,153,591,6],[336,0,592,5],[338,0,594,4],[338,12,594,8,"cancelCallbackOrContext"],[338,35,594,31],[338,39,594,35],[338,40,594,36],[338,63,594,47,"cancelCallbackOrContext"],[338,86,594,36],[338,87,594,8],[338,91,594,75,"context"],[338,98,594,4],[338,100,594,84],[339,0,595,6],[339,16,595,12],[339,20,595,16,"Error"],[339,25,595,12],[339,26,595,22],[339,152,595,12],[339,153,595,6],[340,0,596,5],[342,0,598,4],[342,12,598,10,"eventRegistrationKey"],[342,32,598,30],[342,35,598,33],[342,40,598,38,"_getRegistrationKey"],[342,59,598,33],[342,60,598,58,"eventType"],[342,69,598,33],[342,70,598,4],[344,0,600,4],[344,12,600,10,"registrationCancellationKey"],[344,39,600,37],[344,42,600,43,"eventRegistrationKey"],[344,62,600,37],[344,77,600,4],[346,0,602,4],[346,12,602,10,"_context"],[346,20,602,18],[346,23,602,21,"cancelCallbackOrContext"],[346,46,602,44],[346,50,602,48],[346,51,602,49],[346,74,602,60,"cancelCallbackOrContext"],[346,97,602,49],[346,98,602,21],[346,101,602,87,"cancelCallbackOrContext"],[346,124,602,21],[346,127,602,113,"context"],[346,134,602,4],[348,0,604,4],[348,12,604,10,"registrationObj"],[348,27,604,25],[348,30,604,28],[349,0,605,6,"eventType"],[349,10,605,6,"eventType"],[349,19,605,15],[349,21,605,6,"eventType"],[349,30,604,28],[350,0,606,6,"ref"],[350,10,606,6,"ref"],[350,13,606,9],[350,15,606,11],[350,19,604,28],[351,0,607,6,"path"],[351,10,607,6,"path"],[351,14,607,10],[351,16,607,12],[351,21,607,17,"path"],[351,25,604,28],[352,0,608,6,"key"],[352,10,608,6,"key"],[352,13,608,9],[352,15,608,11],[352,20,608,16,"_getRefKey"],[352,30,608,11],[352,32,604,28],[353,0,609,6,"appName"],[353,10,609,6,"appName"],[353,17,609,13],[353,19,609,15],[353,24,609,20,"_database"],[353,33,609,15],[353,34,609,30,"app"],[353,37,609,15],[353,38,609,34,"name"],[353,42,604,28],[354,0,610,6,"dbURL"],[354,10,610,6,"dbURL"],[354,15,610,11],[354,17,610,13],[354,22,610,18,"_database"],[354,31,610,13],[354,32,610,28,"databaseUrl"],[354,43,604,28],[355,0,611,6,"eventRegistrationKey"],[355,10,611,6,"eventRegistrationKey"],[355,30,611,26],[355,32,611,6,"eventRegistrationKey"],[356,0,604,28],[356,9,604,4],[358,0,613,4,"SyncTree"],[358,26,613,13,"addRegistration"],[358,41,613,4],[358,60,613,34,"registrationObj"],[358,75,613,4],[359,0,614,6,"listener"],[359,10,614,6,"listener"],[359,18,614,14],[359,20,614,16,"_context"],[359,28,614,24],[359,31,614,27,"callback"],[359,39,614,35],[359,40,614,36,"bind"],[359,44,614,27],[359,45,614,41,"_context"],[359,53,614,27],[359,54,614,24],[359,57,614,53,"callback"],[360,0,613,4],[362,0,617,4],[362,12,617,8,"cancelCallbackOrContext"],[362,35,617,31],[362,39,617,35],[362,62,617,46,"cancelCallbackOrContext"],[362,85,617,35],[362,86,617,4],[362,88,617,72],[363,0,621,6,"SyncTree"],[363,28,621,15,"addRegistration"],[363,43,621,6],[363,44,621,31],[364,0,622,8,"ref"],[364,12,622,8,"ref"],[364,15,622,11],[364,17,622,13],[364,21,621,31],[365,0,623,8,"once"],[365,12,623,8,"once"],[365,16,623,12],[365,18,623,14],[365,22,621,31],[366,0,624,8,"path"],[366,12,624,8,"path"],[366,16,624,12],[366,18,624,14],[366,23,624,19,"path"],[366,27,621,31],[367,0,625,8,"key"],[367,12,625,8,"key"],[367,15,625,11],[367,17,625,13],[367,22,625,18,"_getRefKey"],[367,32,625,13],[367,34,621,31],[368,0,626,8,"appName"],[368,12,626,8,"appName"],[368,19,626,15],[368,21,626,17],[368,26,626,22,"_database"],[368,35,626,17],[368,36,626,32,"app"],[368,39,626,17],[368,40,626,36,"name"],[368,44,621,31],[369,0,627,8,"dbURL"],[369,12,627,8,"dbURL"],[369,17,627,13],[369,19,627,15],[369,24,627,20,"_database"],[369,33,627,15],[369,34,627,30,"databaseUrl"],[369,45,621,31],[370,0,628,8,"eventType"],[370,12,628,8,"eventType"],[370,21,628,17],[370,23,628,22,"eventType"],[370,32,628,17],[370,47,621,31],[371,0,629,8,"eventRegistrationKey"],[371,12,629,8,"eventRegistrationKey"],[371,32,629,28],[371,34,629,30,"registrationCancellationKey"],[371,61,621,31],[372,0,630,8,"listener"],[372,12,630,8,"listener"],[372,20,630,16],[372,22,630,18,"_context"],[372,30,630,26],[372,33,630,29,"cancelCallbackOrContext"],[372,56,630,52],[372,57,630,53,"bind"],[372,61,630,29],[372,62,630,58,"_context"],[372,70,630,29],[372,71,630,26],[372,74,630,70,"cancelCallbackOrContext"],[373,0,621,31],[373,11,621,6],[374,0,632,5],[376,0,635,4],[376,37,635,20],[376,42,635,25,"_database"],[376,51,635,4],[376,53,635,36,"on"],[376,55,635,4],[376,56,635,39],[377,0,636,6,"eventType"],[377,10,636,6,"eventType"],[377,19,636,15],[377,21,636,6,"eventType"],[377,30,635,39],[378,0,637,6,"path"],[378,10,637,6,"path"],[378,14,637,10],[378,16,637,12],[378,21,637,17,"path"],[378,25,635,39],[379,0,638,6,"key"],[379,10,638,6,"key"],[379,13,638,9],[379,15,638,11],[379,20,638,16,"_getRefKey"],[379,30,638,11],[379,32,635,39],[380,0,639,6,"appName"],[380,10,639,6,"appName"],[380,17,639,13],[380,19,639,15],[380,24,639,20,"_database"],[380,33,639,15],[380,34,639,30,"app"],[380,37,639,15],[380,38,639,34,"name"],[380,42,635,39],[381,0,640,6,"modifiers"],[381,10,640,6,"modifiers"],[381,19,640,15],[381,21,640,17],[381,26,640,22,"_query"],[381,32,640,17],[381,33,640,29,"getModifiers"],[381,45,640,17],[381,47,635,39],[382,0,641,6,"hasCancellationCallback"],[382,10,641,6,"hasCancellationCallback"],[382,33,641,29],[382,35,641,31],[382,58,641,42,"cancelCallbackOrContext"],[382,81,641,31],[382,82,635,39],[383,0,642,6,"registration"],[383,10,642,6,"registration"],[383,22,642,18],[383,24,642,20],[384,0,643,8,"eventRegistrationKey"],[384,12,643,8,"eventRegistrationKey"],[384,32,643,28],[384,34,643,8,"eventRegistrationKey"],[384,54,642,20],[385,0,644,8,"key"],[385,12,644,8,"key"],[385,15,644,11],[385,17,644,13,"registrationObj"],[385,32,644,28],[385,33,644,29,"key"],[385,36,642,20],[386,0,645,8,"registrationCancellationKey"],[386,12,645,8,"registrationCancellationKey"],[386,39,645,35],[386,41,645,8,"registrationCancellationKey"],[387,0,642,20],[388,0,635,39],[388,9,635,4],[389,0,650,4,"listeners"],[389,8,650,4,"listeners"],[389,17,650,13],[389,21,650,17],[389,22,650,4],[390,0,653,4],[390,15,653,11,"callback"],[390,23,653,4],[391,0,654,3],[394,28,672,40],[395,0,672,40],[395,12,672,6,"eventType"],[395,21,672,40],[395,92,672,18],[395,94,672,40],[396,0,672,40],[396,12,672,22,"originalCallback"],[396,28,672,40],[398,0,673,4],[398,12,673,8],[398,13,673,9,"arguments"],[398,22,673,18],[398,23,673,19,"length"],[398,29,673,4],[398,31,673,27],[399,0,676,6],[399,17,676,13,"SyncTree"],[399,35,676,22,"removeListenersForRegistrations"],[399,66,676,13],[399,67,676,54,"SyncTree"],[399,85,676,63,"getRegistrationsByPath"],[399,107,676,54],[399,108,676,86],[399,113,676,91,"path"],[399,117,676,54],[399,118,676,13],[399,119,676,6],[400,0,677,5],[402,0,683,4],[402,12,683,8,"eventType"],[402,21,683,17],[402,26,683,22],[402,27,683,23],[402,48,683,32,"eventType"],[402,57,683,23],[402,58,683,22],[402,62,683,46],[402,63,683,47,"ReferenceEventTypes"],[402,82,683,66],[402,83,683,67,"eventType"],[402,92,683,66],[402,93,683,17],[402,94,683,4],[402,96,683,80],[403,0,684,6],[403,16,684,12],[403,20,684,16,"Error"],[403,25,684,12],[403,101,684,94,"Object"],[403,107,684,100],[403,108,684,101,"keys"],[403,112,684,94],[403,113,684,106,"ReferenceEventTypes"],[403,132,684,94],[403,134,684,127,"join"],[403,138,684,94],[403,139,684,132],[403,143,684,94],[403,144,684,12],[403,152,684,6],[404,0,685,5],[406,0,687,4],[406,12,687,8,"originalCallback"],[406,28,687,24],[406,32,687,28],[406,33,687,29],[406,56,687,40,"originalCallback"],[406,72,687,29],[406,73,687,4],[406,75,687,59],[407,0,688,6],[407,16,688,12],[407,20,688,16,"Error"],[407,25,688,12],[407,26,688,22],[407,128,688,12],[407,129,688,6],[408,0,689,5],[410,0,697,4],[410,12,697,8,"eventType"],[410,21,697,17],[410,25,697,21,"originalCallback"],[410,41,697,4],[410,43,697,39],[411,0,698,6],[411,14,698,12,"registration"],[411,26,698,24],[411,29,698,27,"SyncTree"],[411,47,698,36,"getOneByPathEventListener"],[411,72,698,27],[411,73,698,62],[411,78,698,67,"path"],[411,82,698,27],[411,84,698,73,"eventType"],[411,93,698,27],[411,95,698,84,"originalCallback"],[411,111,698,27],[411,112,698,6],[413,0,699,6],[413,14,699,10],[413,15,699,11,"registration"],[413,27,699,6],[413,29,699,25],[413,36,699,32],[413,38,699,25],[415,0,701,6,"SyncTree"],[415,28,701,15,"removeListenersForRegistrations"],[415,59,701,6],[415,60,701,47],[415,61,701,51,"registration"],[415,73,701,47],[415,89,701,6],[417,0,704,6],[417,17,704,13,"SyncTree"],[417,35,704,22,"removeListenerRegistrations"],[417,62,704,13],[417,63,704,50,"originalCallback"],[417,79,704,13],[417,81,704,68],[417,82,704,69,"registration"],[417,94,704,68],[417,95,704,13],[417,96,704,6],[418,0,705,5],[420,0,709,4],[420,12,709,10,"registrations"],[420,25,709,23],[420,28,709,26,"SyncTree"],[420,46,709,35,"getRegistrationsByPathEvent"],[420,73,709,26],[420,74,709,63],[420,79,709,68,"path"],[420,83,709,26],[420,85,709,74,"eventType"],[420,94,709,26],[420,95,709,4],[422,0,710,4,"SyncTree"],[422,26,710,13,"removeListenersForRegistrations"],[422,57,710,4],[422,58,710,45,"SyncTree"],[422,76,710,54,"getRegistrationsByPathEvent"],[422,103,710,45],[422,104,710,82],[422,109,710,87,"path"],[422,113,710,45],[422,115,710,96,"eventType"],[422,124,710,45],[422,140,710,4],[424,0,711,4],[424,15,711,11,"SyncTree"],[424,33,711,20,"removeListenersForRegistrations"],[424,64,711,11],[424,65,711,52,"registrations"],[424,78,711,11],[424,79,711,4],[425,0,712,3],[428,26,458,15],[429,0,459,4],[429,12,459,8],[429,17,459,13,"path"],[429,21,459,8],[429,26,459,22],[429,29,459,4],[429,31,459,27],[429,38,459,34],[429,42,459,27],[430,0,460,4],[430,15,460,11],[430,19,460,15,"Reference"],[430,28,460,11],[430,29,460,25],[430,34,460,30,"_database"],[430,43,460,11],[430,45,460,41],[430,50,460,46,"path"],[430,54,460,41],[430,55,460,51,"substring"],[430,64,460,41],[430,65,460,61],[430,66,460,41],[430,68,460,64],[430,73,460,69,"path"],[430,77,460,64],[430,78,460,74,"lastIndexOf"],[430,89,460,64],[430,90,460,86],[430,93,460,64],[430,94,460,41],[430,95,460,11],[430,96,460,4],[431,0,461,3],[434,26,470,12],[435,0,471,4],[435,15,471,11],[435,19,471,4],[436,0,472,3],[439,26,481,13],[440,0,482,4],[440,15,482,11],[440,19,482,15,"Reference"],[440,28,482,11],[440,29,482,25],[440,34,482,30,"_database"],[440,43,482,11],[440,45,482,41],[440,48,482,11],[440,49,482,4],[441,0,483,3],[444,4,56,39,"ReferenceBase"],[444,27]]},"type":"js/module"}]}